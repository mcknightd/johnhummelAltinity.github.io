[{"body":"Do we really need an Overview section? Haven’t decided yet.\n","excerpt":"Do we really need an Overview section? Haven’t decided yet.\n","ref":"/altinitycloud/overview/","title":"Overview"},{"body":"Overview of Altinity Docs and how people can do things like contribute, search, etc.\n","excerpt":"Overview of Altinity Docs and how people can do things like …","ref":"/overview/","title":"Overview"},{"body":"Welcome to Altinity.Cloud! Altinity.Cloud is the fastest, easiest way to set up, administer, and use ClickHouse. Your ClickHouse are fully managed so you can focus on your work.\nIf this is your first time using Altinity.Cloud, this quick start guide will give you the minimum steps to become familiar with the system. When you’re ready to dig deeper and use the full power of ClickHouse in your Altinity.Cloud environment, check out our Administrator and Developer Guides for in depth knowledge and best practices.\n","excerpt":"Welcome to Altinity.Cloud! Altinity.Cloud is the fastest, easiest way …","ref":"/altinitycloud/quickstartguide/","title":"Quick Start Guide"},{"body":"Create an Account To start your Altinity.Cloud journey, the first thing you need is an account. New users can sign up for a test account on the Altinity.Cloud Test Drive page. Enter your contact information, and an Altinity.Cloud rep will get right with you.\nOnce finished, the Altinity.Cloud team will reach out to you with your login credentials. Altinity.Cloud uses your email address as your username, and you’ll be assigned an initial password.\nLogin to Altinity.Cloud There are two methods to login:\n Login with Username and Password Login with Auth0  Login with Username and Password If you’ve used any web site, you’re likely familiar with this process.\nTo login to Altinity.Cloud with your username and password:\n Enter your username - in this case your email address - in the field marked Login. Enter your Password, then click Sign In.  Login with Auth0 Auth0 allows you to authenticate to Altinity.Cloud through a trusted authentication provider, in this case Google. Once set up, you can click Auth0 to automatically login.\n Requirements: In order to use Auth0, you must have a Google account with the same email address that you use for Altinity.Cloud.  To setup authentication with Auth0 for the first time:\n Access the Altinity.Cloud page. Select Auth0. Select the Google account to use for authentication.\nIMPORTANT NOTE: The Google account must have the same email address as your Altinity.Cloud account. Select Continue with Google, and you’ll be in Altinity.Cloud.  After you’ve completed the Auth0 setup process, you can login to Altinity.Cloud by selecting Auth0 from the login page.\n","excerpt":"Create an Account To start your Altinity.Cloud journey, the first …","ref":"/altinitycloud/quickstartguide/createaccount/","title":"Account Creation and Login"},{"body":"How awesome Altinity.Cloud is.\n","excerpt":"How awesome Altinity.Cloud is.\n","ref":"/altinitycloud/","title":"Altinity.Cloud"},{"body":"Explore Altinity Cloud Manager Once you’ve logged in to Altinity.Cloud, let’s take a moment and familiarize ourselves with the environment. The default page is the Altinity Cloud Manager.\nThe Altinity Cloud Manager page is separated into the following sections:\n A: Cluster Creation: Clusters can be created from scratch with Launch Cluster, or the structure and settings configured with JSON through Import. B: Clusters: Each cluster associated with your Altinity.Cloud account is listed in either tile format, or as a short list. They’ll display a short summary of their health and performance. By selecting a cluster, you can view the full details. C: User Management: Change which organization you are currently working in and update your Account Settings.  ","excerpt":"Explore Altinity Cloud Manager Once you’ve logged in to …","ref":"/altinitycloud/quickstartguide/explorealtinitycloudmanager/","title":"Explore Altinity Cloud Manager"},{"body":"Time to make your first cluster! For this example, we’re creating a minimally sized cluster, but you can upgrade your cluster later to make it the exact size you need for your ClickHouse needs.\nTo create your first cluster:\n From the Altinity Cloud Manager page, select Launch Cluster. This starts the Cluster Launch Wizard. The first page is Resources Configuration, where we set the name, size and authentication for the new cluster. When finished, click Next. Use the following settings:     Setting Value     Name Whatever name you like. Cluster names will be used to create the DNS name of the cluster. Therefore, cluster names must follow DNS name restrictions (letters, numbers, and dashes allowed, periods and special characters are not). Cluster names must be lower case.   Node Type Select m5.large This is the size of the node. This selection gives us a cluster with 2 CPUs and 6.5 Gb RAM. Recall that we can upgrade this cluster later.   Node Storage Set to 30 Gb. The size of each Cluster node in Gb (gigabytes). Each node will have the same storage area.   Number of Volumes Set to 1. Network storage can be split into separate volumes. Use more volumes to increase query performance.   Volume Type Select gp2 (Not Encrypted). Volumes can be either encrypted or unencrypted, depending on your security requirements.   Number of Shards Set to 1. The shard represents a set of nodes. Shards can then be replicated to provide increased availability and recovery.   ClickHouse Version Select the most recent Altinity Stable Release. Your ClickHouse cluster can use the version that best meets your needs. Note that all nodes will run the same ClickHouse version.   ClickHouse User Name Autoset to admin. The default administrative user.   ClickHouse User Password and Confirm Password Set to your security requirements. Both the ClickHouse User Password and Confirm Password must match.    The next page is High Availability Configuration. This is where you can set your replication, Zookeeper, and backup options. Use the following values for your first cluster, then click Next to continue:     Setting Value     Data Replication Set to Enabled. Data replication duplicates data across replica clusters for increased performance and availability.   Number of Replicas Set to 2. Only required if Data Replication is Enabled. Sets the number of replicas for each cluster shard.   Zookeeper Configuration Select Single Node for development and test clusters. Select Three Nodes for production usage. IMPORTANT NOTE: This setting cannot be changed later. Apache Zookeeper manages synchronization between the clusters.   Zookeeper Node Type Default is selected by default.   Node Placement Select Separate Nodes.   Enable Backups Set to Enabled.    The Connection Configuration page determines how to communicate with your new cluster. Set the following values, then select Next to continue:     Setting Value     DNS Name This is automatically set based on your cluster name.   Use TLS Set to Enabled. When enabled, communications with your cluster are encrypted with TLS.   Load Balancer Type Select Altinity Edge Ingress. IMPORTANT NOTE: This setting requires clients to support SNI (Server Name Indication). This will require the most current Clickhouse client and Python clickhouse-driver. This setting cannot be changed after the cluster is created.    Last page! Review \u0026 Launch lets you double check your settings. When you’re ready, click Launch.  It will take a few minutes before your new cluster is ready, so grab your coffee or tea or other hydrating beverage. When it’s complete, you’ll see your new cluster with all nodes online and all health checks passed.\n","excerpt":"Time to make your first cluster! For this example, we’re creating a …","ref":"/altinitycloud/quickstartguide/createfirstcluster/","title":"Create Your First Cluster"},{"body":"Once your cluster is created, time to create some tables and do some queries.\nFor those experienced with ClickHouse, this will be very familiar. For people who are new to ClickHouse, creating tables is very similar to other SQL based databases, with some extra syntax that defines the type of table we’re making. This is part of what gives ClickHouse its speed. For complete details on ClickHouse commands, see the ClickHouse SQL Reference Guide.\nCluster Explore The Cluster Explore page allows you to run queries, view the schema, and check on processes for your cluster. It’s a quick way of getting into your ClickHouse database, run commands and view your schema straight from your web browser. We’ll be using this to generate our first tables and input some data.\nTo access Cluster Explore for your cluster, just click Explore for the specific cluster to manage.\nFor our example, we’re going to create two tables:\n events_local: This table will use the ReplicatedMergeTree table engine. If you don’t know about table engines, don’t worry about that for now. See the ClickHouse Engines page for complete information. events: This table will be distributed on your cluster with the Distributed table engine.  In our examples, we’ll be using macro variables - these are placed between curly brackets and let us use the same SQL commands on different clusters and environments without having to fill in every detail. Any time you see an entry like {cluster} or {shard} you should recognize those as a macro variable.\nThe commands below will create these tables into the default database on your cluster.\nCreate Tables To create your first tables:\n  From the Altinity Cloud Manager select Explore for the cluster to manage.\n  Select Query.\n  For our first table, copy and paste the following into the Query window, then select Execute.\nCREATE TABLE IF NOT EXISTS events_local ON CLUSTER '{cluster}' ( event_date Date, event_type Int32, article_id Int32, title String ) ENGINE = ReplicatedMergeTree('/clickhouse/{cluster}/tables/{shard}/{database}/{table}', '{replica}') PARTITION BY toYYYYMM(event_date) ORDER BY (event_type, article_id); You should see the following under Execute confirming the commands ran, just replacing docdemo with your cluster:\ndocdemo.demo.beta.altinity.cloud:8443 (query time: 0.342s) chi-docdemo-docdemo-0-0\t9000 0\t1\t0 chi-docdemo-docdemo-0-1\t9000 0\t0\t0   Now let’s create our second table. Back in the Query window, enter the following and select Execute:\nCREATE TABLE events ON CLUSTER '{cluster}' AS events_local ENGINE = Distributed('{cluster}', default, events_local, rand()) Once again, you should see confirmation under Execute:\ndocdemo.demo.beta.altinity.cloud:8443 (query time: 0.162s) chi-docdemo-docdemo-0-0\t9000 0\t1\t0 chi-docdemo-docdemo-0-1\t9000 0\t0\t0   Now that we have some tables, let’s not leave them empty. Inserting data into a ClickHouse table is very similar to most SQL systems. Let’s Insert our data, then do a quick Select on it. Enter the following Insert command into Query, then select Execute:\nINSERT INTO events VALUES(today(), 1, 13, 'Example'); You’ll see the results confirmed under Execute, just like before.\nOK. Then enter the following Select command and select Execute again: \\\nSELECT * FROM events; The results will look like the following:\ndocdemo.demo.beta.altinity.cloud:8443 (query time: 0.018s) ┌─event_date─┬─event_type─┬─article_id─┬─title───┐ │ 2020-11-19 │ 1 │ 13 │ Example │ └────────────┴────────────┴────────────┴─────────┘   View Schema The Database Schema shows a graphical view of your cluster’s database, the tables in it, and their structure.\nTo view your Schema:\n From the Altinity Cloud Manager select Explore for the cluster to manage. Select Schema.  You can expand the databases to display the tables in each database, or select the table to view its details, schema, and some sample rows.\nView Processes To view current actions running on your cluster select Processes. This displays what processes are currently running, what user account they are running under, and allows you to view more details regarding the process.\n","excerpt":"Once your cluster is created, time to create some tables and do some …","ref":"/altinitycloud/quickstartguide/yourfirstqueries/","title":"Your First Queries"},{"body":"Now that we’ve shown how to create a cluster and use ClickHouse SQL queries into your new cluster, let’s connect to it remotely.\nFor the following, we’re going to be using the clickhouse-client program, but the same process will help you gain access from your favorite client.\nFull instructions for installing ClickHouse can be found on theClickHouse Installation page. We’ll keep this simple and assume you’re using a Linux environment like Ubuntu. For this example, we set up a virtual machine running Ubuntu 20.04.\nFirst, we need to know our connection details for our Altinity.Cloud ClickHouse cluster. To view your connection details:\n  From the Altinity Cloud Manager, select Access Point for the cluster to manage.\n  From here, you can copy and paste the settings for the ClickHouse client. For example:\nclickhouse-client -h yourdataset.yourcluster.altinity.cloud --port 9440 -s --user=admin --password   ClickHouse Client The ClickHouse Client is a command line based program that will be familiar to SQL based users.\nSetting Up ClickHouse Client in Linux If you’ve already set up ClickHouse client, then you can skip this step.\nFor those who need quick instructions on how to install ClickHouse client in their deb based Linux environment (like Ubuntu), use the following:\n IMPORTANT NOTE: As of this document’s publication, version 20.13 and above of the ClickHouse client is required to connect with the SNI enabled clusters. These instructions use the testing version of that client. An updated official stable build is expected to be released soon.  sudo apt-get install apt-transport-https ca-certificates dirmngr sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv E0C56BD4 echo \"deb https://repo.clickhouse.tech/deb/testing/ main/\" | sudo tee \\  /etc/apt/sources.list.d/clickhouse.list sudo apt-get update sudo apt-get install -y clickhouse-client Connect With ClickHouse Client If your ClickHouse client is ready, then you can copy and paste your connection settings into your favorite terminal program, and you’ll be connected.\nClickHouse Python Driver For users who prefer Python, they can use the **clickhouse-driver **to connect through Python. These instructions are very minimal, and are intended just to get you working in Python with your new Altinity.Cloud cluster.\nThese instructions are in the bash shell and require the following be installed in your environment:\n  Python 3.7 and above\n  The Python module venv\n  git\n  IMPORTANT NOTE: We will be using clickhouse-driver v0.1.6 development build, which has support for Server Name Indication (SNI) when using TLS communications.\n  To connect with the Python clickhouse-driver:\n  (Optional) Setup your local environment. For example: \\\npython3 -m venv test . test/bin/activate   Install the driver with pip3: \\\npip3 install git+https://github.com/mymarilyn/clickhouse-driver@master#egg=clickhouse-driver   Start Python.\n  Add the client and connection details. Cluster Explore provides the necessary information to link directly to your cluster.\nImport the clickhouse_driver client and enter the connection settings:\nfrom clickhouse_driver import Client client = Client('\u003cHOSTNAME\u003e', user='admin', password=\u003cPASSWORD\u003e, port=9440, secure='y', verify=False)   Run client.execute and submit your query. Let’s just look at the tables from within Python:\n\u003e\u003e\u003e client.execute('SHOW TABLES in default') [('events',), ('events_local',)]   You can perform selects and inserts as you need. For example, continuing from our Your First Queries using Cluster Explore.\n\u003e\u003e\u003e result = client.execute('SELECT * FROM default.events') \u003e\u003e\u003e print(result) [(datetime.date(2020, 11, 23), 1, 13, 'Example')]   For more information see the article ClickHouse And Python: Getting To Know The ClickHouse-driver Client.\n","excerpt":"Now that we’ve shown how to create a cluster and use ClickHouse SQL …","ref":"/altinitycloud/quickstartguide/connectclient/","title":"Connect Remote Clients"},{"body":"There are several ways of running ClickHouse to take advantage of the robust features and speed in your big data applications. Altinity.Cloud makes it easy to start up a cluster the way you need, manage it, and connect to it so you can go from concept to execution in the fastest way possible.\nIf you have any questions, please feel free to Contact Us at any time.\n","excerpt":"There are several ways of running ClickHouse to take advantage of the …","ref":"/altinitycloud/quickstartguide/conclusion/","title":"Conclusion"},{"body":"When using Launch Cluster, I can’t Click Next or complete the process Make sure that all of your settings are filled in. Some common gotchas are:\n Make sure that the ClickHouse User Password field has been entered and confirmed. The cluster name should be in lower case. Cluster names must be compliant with DNS naming standards.  ","excerpt":"When using Launch Cluster, I can’t Click Next or complete the process …","ref":"/altinitycloud/quickstartguide/faq/","title":"FAQ"},{"body":"","excerpt":"","ref":"/search/","title":""},{"body":"\nI'm not blue.","excerpt":"\nI'm not blue.","ref":"/","title":"Altinity Documentation"}]